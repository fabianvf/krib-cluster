---

- hosts: krib
  become: yes
  vars:
    drpcli: /usr/local/bin/drpcli
  tasks:
  - name: Install git
    package:
      name: git
      state: present

  - name: Check if drp is already provisioned
    stat:
      path: /etc/.drp_provisioned
    register: provisioned

  - when: not provisioned.stat.exists
    block:
    - name: Get install script
      get_url:
        url: http://get.rebar.digital/stable
        dest: /bin/drp-installer
        mode: 0700

    - name: Run installer
      command: /bin/drp-installer install --disable-dhcp

    - name: Mark that installer has run
      file:
        path: /etc/.drp_provisioned
        state: touch

  - name: Start and enable dr-provision
    service:
      name: dr-provision
      state: started
      enabled: yes

  - name: Ensure required content is enabled
    command: '{{ drpcli }} contents upload {{ item }}'
    retries: 6
    delay: 10
    until: result.rc == 0
    loop:
    - catalog:drp-community-content-stable
    - catalog:task-library-stable
    register: result

  - name: Upload discovery and centos bootenvs
    command: '{{ drpcli }} bootenvs uploadiso {{ item }}'
    changed_when: "'already has all required ISO files' not in result.stderr"
    register: result
    loop:
    - sledgehammer
    - centos-7-install

  - name: Set default workflow to discovery
    command: '{{ drpcli }} prefs set defaultWorkflow discover-base unknownBootEnv discovery'

  - name: Enable certs plugin
    command: '{{ drpcli }} plugin_providers upload certs from catalog:certs-stable'

  - name: Enable krib content
    command: '{{ drpcli }} contents upload catalog:krib-stable'

  - name: Create provisioning subnet
    command: "{{ drpcli }} subnets create '{{ subnet | to_json }}'"
    failed_when:
    - result.rc !=0
    - "'already exists' not in result.stderr"
    changed_when:
    - "'already exists' not in result.stderr"
    register: result
    when: subnet is defined

  - name: Create krib-cluster profile
    command: "{{ drpcli }} profiles create '{{ profile | to_json }}'"
    failed_when:
    - result.rc !=0
    - "'already exists' not in result.stderr"
    changed_when:
    - "'already exists' not in result.stderr"
    register: result
    vars:
      profile:
        Name: "krib-cluster"
        Description: "Kubernetes install-to-local-disk"
        Params:
          krib/cluster-profile: "krib-cluster"
          etcd/cluster-profile: "krib-cluster"
          krib/cluster-domain: "{{ cluster_domain | default(None) }}"
          krib/cluster-master-count: '{{ master_count | default(1) }}'
          # krib/cluster-kubernetes-version: "{{ kube_version | default('1.14.1') }}"
          operating-system-disk: '{{ boot_disk | default("sda") }}'
          access-keys:
            admin: '{{ admin_ssh_pub_key | default(None) }}'
          helm/charts:
          - chart: rook-stable/rook-ceph
            kubectlafter:
            - apply -f cluster.yaml
            name: rook-ceph
            namespace: rook-ceph-system
            repos:
              rook-stable: https://charts.rook.io/stable
            templatesafter:
            - name: helm-rook.after.sh.tmpl
              nodes: leader
            templatesbefore:
            - name: helm-rook.before.sh.tmpl
              nodes: all
              runIfInstalled: true
            templates:
              cluster: helm-rook.cfg.tmpl
            wait: true
        Meta:
          color: "purple"
          icon: "ship"
          title: "My Home Kubernetes Cluster"
